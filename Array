#include <iostream>
#include<limits.h>
#include<algorithm>>
using namespace std;

                                                                    // PRINTING THW ARRAY WITH THE HELP OF FUNCTIONS 

/*void printarr(int arr[], int n){
  for (int i=0; i<n; i++){
          cout<<arr[i]<<" ";
  }
  cout<<endl;
}
int main() {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  printarr(arr, n);
  cout<<"done"<<endl;
  

  return 0;
}*/


                                                                          // LINEAR SEARCH IN AARAY USING FUNCTIONS 

/*
bool linearSearch (int arr[], int n, int key){
  for (int i=0; i<n; i++) {
    if (arr[i]==key){
      return true;
    }  
  } 
   return false; 
}

int main () {
  int n, key;
  cin>>n;
  int arr[n];
  cout<<"enter the value of key : "<<endl;
  cin>>key;
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  linearSearch( arr, n, key);
  cout<<endl;
  bool ans = linearSearch( arr, n, key);
  if (ans) {
    cout<<"found"<<endl;
  }
  else {
    cout<<"not found"<<endl;
  }
  cout<<endl;
  cout<<" done "<<endl;
  return 0;
}
   */


                                                                               // LINEAR SREACH IN ARRAY WITHOUT USING FUNCTIONS

/*
int main () {
  int n, key;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++) {
    cin>>arr[i];
  }
  cout<<" enter the value of key : "<<endl;
  cin>>key;
  bool ans=0;
  for (int i=0; i<n; i++){
    if (arr[i]==key){
      ans =1 ;
    }
  }
  if (ans==1){
    cout<<" found "<<endl;
  }
  else
    cout<<" not found "<<endl;
  
  return 0;
}
*/


 
                                                             // COUNTING 0'S AND 1'S IN ARRAY.....cant use array for n one because
// in main as its giving error

/*
int main () {
  int n ;
  
  int arr[n];
  cout<<"enter the size of array : "<<endl;
  cin>>n;
  cout<<"initialise the array : "<<endl;
  for (int i=0; i<n ; i++){
    cin>>arr[i];
  }
  int countone = 0;
  int countzero = 0 ;
  for (int i=0; i<n; i++){
    if (arr[i]==1){
      countone++;
    }
    if (arr[i]==0){
      countzero++;
    }
  }
  cout<<"no. of 1 : "<<countone<<endl;
  cout<<" no. of 0 : "<<countzero<<endl;
  
}
*/


                                                                      // FIND MAXIMUM NUMBER IN ARRAY USING FUNCTION

/*
void num (int arr[], int n){
  int maxi=INT_MIN;
  int mini = INT_MAX;
  for (int i=0; i<n; i++){
    if (arr[i]<mini){
      mini=arr[i];
    }
    if (arr[i]>maxi){
      maxi=arr[i];
    }
  }
  cout<<mini<<endl;
  cout<<maxi<<endl;
} 

int main () {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  num (arr, n);
  //cout<<num(arr,n)<<endl;
  return 0;
}
*/

/*
int num (int arr[], int n){
  int maxi=INT_MIN;
  int mini = INT_MAX;
  for (int i=0; i<n; i++){
    if (arr[i]<mini){
      mini=arr[i];
    }
    if (arr[i]>maxi){
      maxi=arr[i];
    }
  }
  int ansmin = mini;
//  cout<<mini<<endl;
//  cout<<maxi<<endl;
} 

int main () {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  num (arr, n);
  //cout<<num(arr,n)<<endl;
  return 0;
}
*/


                                                                                 // PRINT THE EXTREMES OF ARRAY
/*
int main(){
 int n;
 cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  int start = 0;
  int end = n-1;

  while (start <= end){
    if (start==end){
      cout<<arr[start]<<" ";
    }
    else {
      cout<<arr[start]<<" ";
      cout<<arr[end]<<" ";
    }
  start++;
    end--;
  }
  return 0;
}
*/

 //print same as above using functions

/*
void printnum( int arr[], int n){
  int start = 0;
  int end = n-1;
  while (start <= end){
    if (start == end ){
      cout<<arr [start]<<" ";
    }
    else {
      cout<<arr [start]<<" ";
      cout<<arr [end]<<" ";
    }
    start++;
    end--;
  }
}
int main () {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  printnum (arr, n);
  return 0;
}
*/




                                                                                // PRINT REVERSE OF ARRAY

/*
int main() {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  int start = 0;
  int end = n-1;
  while (start <= end ){
swap (arr[start], arr[end]);
    start++;
    end--;
  }
  for (int i=0; i<n; i++){
    cout<<arr[i]<<" ";
  }
  return 0;
}
*/


void rev(int arr[], int n ) {
  int start= 0;
  int end=n-1;
  while (start<=end){
    swap(arr[start], arr[end]);
    start++;
    end--;
  }
  for (int i=0; i<n; i++){
    cout<<arr[i]<<" ";
  }
}
int main() {
  int n;
  cin>>n;
  int arr[n];
  for (int i=0; i<n; i++){
    cin>>arr[i];
  }
  rev(arr,n);
  return 0;
}
